name: E2E Tests (iOS + Android)

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:

jobs:
  e2e-tests-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      env:
        NODE_AUTH_TOKEN: ${{ secrets.MUSIC_NOTATION_SECRET_KEY }}
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.MUSIC_NOTATION_SECRET_KEY }}" > ~/.npmrc
        echo "@leonkwan46:registry=https://npm.pkg.github.com" >> ~/.npmrc
        npm ci
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli
      
    - name: Install Maestro
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH
        
    - name: Setup Expo
      run: |
        npx expo install --fix
        
    - name: Create iOS Simulator
      run: |
        # List available simulators and iOS versions for debugging
        echo "Available simulators:"
        xcrun simctl list devicetypes | grep iPhone
        
        echo "Available iOS runtimes:"
        xcrun simctl list runtimes | grep iOS
        
        # Try to create iPhone 16 with iOS 18.0, fallback to iPhone 15 with iOS 17.0, then iPhone 14 with iOS 16.4
        echo "Creating iOS simulator..."
        xcrun simctl create "maestro-ios-test" "iPhone 16" "iOS-18-0" || \
        xcrun simctl create "maestro-ios-test" "iPhone 15" "iOS-17-0" || \
        xcrun simctl create "maestro-ios-test" "iPhone 14" "iOS-16-4" || \
        xcrun simctl create "maestro-ios-test" "iPhone 13" "iOS-16-0" || \
        echo "Using existing simulator or creating with default settings"
        
        # Boot the simulator
        xcrun simctl boot "maestro-ios-test" || echo "Simulator already booted"
        
        # List all devices to verify
        echo "Available devices:"
        xcrun simctl list devices
      timeout-minutes: 10
        
    - name: Build and install iOS app
      run: |
        # Wait for simulator to be fully ready
        sleep 10
        
        # List available simulators for debugging
        echo "Available simulators:"
        xcrun simctl list devices | grep "maestro-ios-test"
        
        # Build and install the app
        echo "Building and installing iOS app..."
        npx expo run:ios --device "maestro-ios-test" --no-build-cache
        
        # Wait for app to install and launch
        sleep 15
        echo "iOS app installation complete"
      timeout-minutes: 15
        
    - name: Verify iOS setup
      run: |
        # Check if simulator is running
        xcrun simctl list devices | grep "maestro-ios-test" | grep "Booted"
        
        # Check if app is installed
        xcrun simctl listapps "maestro-ios-test" | grep "Tonale" || echo "App may still be installing..."
        
    - name: Run iOS E2E tests
      run: |
        maestro test tests/e2e/app-launch.yaml
        
    - name: Upload iOS test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results-ios
        path: maestro-results/
        
  e2e-tests-android:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      env:
        NODE_AUTH_TOKEN: ${{ secrets.MUSIC_NOTATION_SECRET_KEY }}
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.MUSIC_NOTATION_SECRET_KEY }}" > ~/.npmrc
        echo "@leonkwan46:registry=https://npm.pkg.github.com" >> ~/.npmrc
        npm ci
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli
      
    - name: Install Maestro
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH
        
    - name: Setup Expo
      run: |
        npx expo install --fix
        
    - name: Run Android E2E tests with emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 29
        target: google_apis
        arch: x86_64
        profile: Nexus 6
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -camera-back none
        disable-animations: true
        script: |
          # Build and install the app
          echo "Building and installing Android app..."
          npx expo run:android --device
          
          # Wait for app to install and launch
          sleep 15
          echo "Android app installation complete"
          
          # Run E2E tests
          echo "Running Android E2E tests..."
          maestro test tests/e2e/app-launch.yaml
        
    - name: Upload Android test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results-android
        path: maestro-results/
