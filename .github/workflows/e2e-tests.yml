name: E2E Tests (iOS + Android)

on:
  push:
    branches: [ main, staging ]
  pull_request:
    branches: [ main, staging ]
  workflow_dispatch:

jobs:
  e2e-tests-ios:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      env:
        NODE_AUTH_TOKEN: ${{ secrets.MUSIC_NOTATION_SECRET_KEY }}
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.MUSIC_NOTATION_SECRET_KEY }}" > ~/.npmrc
        echo "@leonkwan46:registry=https://npm.pkg.github.com" >> ~/.npmrc
        npm ci
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli
      
    - name: Install Maestro
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH
        
    - name: Setup Expo
      run: |
        npx expo install --fix
        
    - name: Create iOS Simulator
      run: |
        # List available simulators and iOS versions for debugging
        echo "Available simulators:"
        xcrun simctl list devicetypes | grep iPhone
        
        echo "Available iOS runtimes:"
        xcrun simctl list runtimes | grep iOS
        
        # Try to create iPhone 16 with iOS 18.0, fallback to iPhone 15 with iOS 17.0, then iPhone 14 with iOS 16.4
        echo "Creating iOS simulator..."
        xcrun simctl create "Maestro iOS Test" "iPhone 16" "iOS-18-0" || \
        xcrun simctl create "Maestro iOS Test" "iPhone 15" "iOS-17-0" || \
        xcrun simctl create "Maestro iOS Test" "iPhone 14" "iOS-16-4" || \
        xcrun simctl create "Maestro iOS Test" "iPhone 13" "iOS-16-0" || \
        echo "Using existing simulator or creating with default settings"
        
        # Boot the simulator
        xcrun simctl boot "Maestro iOS Test" || echo "Simulator already booted"
        
        # List all devices to verify
        echo "Available devices:"
        xcrun simctl list devices
      timeout-minutes: 10
        
    - name: Build and install iOS app
      run: |
        # Wait for simulator to be fully ready
        sleep 10
        
        # Build and install the app
        echo "Building and installing iOS app..."
        npx expo run:ios --device "Maestro iOS Test" --no-build-cache
        
        # Wait for app to install and launch
        sleep 15
        echo "iOS app installation complete"
      timeout-minutes: 15
        
    - name: Verify iOS setup
      run: |
        # Check if simulator is running
        xcrun simctl list devices | grep "Maestro iOS Test" | grep "Booted"
        
        # Check if app is installed
        xcrun simctl listapps "Maestro iOS Test" | grep "Tonale" || echo "App may still be installing..."
        
    - name: Run iOS E2E tests
      run: |
        maestro test tests/e2e/app-launch.yaml
        
    - name: Upload iOS test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results-ios
        path: maestro-results/
        
  e2e-tests-android:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '22'
        cache: 'npm'
        
    - name: Install dependencies
      env:
        NODE_AUTH_TOKEN: ${{ secrets.MUSIC_NOTATION_SECRET_KEY }}
      run: |
        echo "//npm.pkg.github.com/:_authToken=${{ secrets.MUSIC_NOTATION_SECRET_KEY }}" > ~/.npmrc
        echo "@leonkwan46:registry=https://npm.pkg.github.com" >> ~/.npmrc
        npm ci
        
    - name: Install Expo CLI
      run: npm install -g @expo/cli
      
    - name: Install Maestro
      run: |
        curl -Ls "https://get.maestro.mobile.dev" | bash
        echo "$HOME/.maestro/bin" >> $GITHUB_PATH
        
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '17'
        
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
        
    - name: Setup Expo
      run: |
        npx expo install --fix
        
    - name: Install Android system image
      run: |
        # Try to install Android 33 first, fallback to Android 30 if not available
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-33;google_apis;x86_64" || \
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "system-images;android-30;google_apis;x86_64"
      timeout-minutes: 10
        
    - name: Create Android emulator
      run: |
        # Try Android 33 first, fallback to Android 30
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n maestro_android_test -k "system-images;android-33;google_apis;x86_64" --force || \
        echo "y" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd -n maestro_android_test -k "system-images;android-30;google_apis;x86_64" --force
      timeout-minutes: 5
        
    - name: Start Android emulator
      run: |
        $ANDROID_HOME/emulator/emulator -avd maestro_android_test -no-audio -no-window -no-snapshot &
        echo "Waiting for emulator to start..."
        adb wait-for-device
        echo "Emulator is ready"
        # Unlock the emulator screen
        adb shell input keyevent 82
        sleep 5
        
    - name: Build and install Android app
      run: |
        npx expo run:android --device
        sleep 10 # Wait for app to install
      timeout-minutes: 10
        
    - name: Run Android E2E tests
      run: |
        maestro test tests/e2e/app-launch.yaml
        
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: e2e-test-results
        path: maestro-results/
